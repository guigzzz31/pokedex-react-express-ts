[{"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx":"1","/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js":"2","/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx":"3","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx":"4","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx":"5","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx":"6","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts":"7","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx":"8","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx":"9","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx":"10","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx":"11","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx":"12","/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx":"13","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx":"14","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx":"15","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx":"16","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/types.ts":"17","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/Pokedex.tsx":"18","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/LikedPokemons.tsx":"19","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemonsLiked.tsx":"20"},{"size":500,"mtime":1608564074953,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608550236169,"results":"23","hashOfConfig":"22"},{"size":1674,"mtime":1608749639733,"results":"24","hashOfConfig":"22"},{"size":2730,"mtime":1608746698964,"results":"25","hashOfConfig":"22"},{"size":1366,"mtime":1608727981169,"results":"26","hashOfConfig":"22"},{"size":86,"mtime":1608645437993,"results":"27","hashOfConfig":"22"},{"size":1440,"mtime":1608730589624,"results":"28","hashOfConfig":"22"},{"size":839,"mtime":1608645437993,"results":"29","hashOfConfig":"22"},{"size":842,"mtime":1608645437993,"results":"30","hashOfConfig":"22"},{"size":773,"mtime":1608655874088,"results":"31","hashOfConfig":"22"},{"size":1226,"mtime":1608645437993,"results":"32","hashOfConfig":"22"},{"size":1207,"mtime":1608746378285,"results":"33","hashOfConfig":"22"},{"size":590,"mtime":1608750125763,"results":"34","hashOfConfig":"22"},{"size":616,"mtime":1608750061701,"results":"35","hashOfConfig":"22"},{"size":3425,"mtime":1608746378281,"results":"36","hashOfConfig":"22"},{"size":1949,"mtime":1608724141751,"results":"37","hashOfConfig":"22"},{"size":192,"mtime":1608746378285,"results":"38","hashOfConfig":"22"},{"size":3097,"mtime":1608750193798,"results":"39","hashOfConfig":"22"},{"size":1680,"mtime":1608750277245,"results":"40","hashOfConfig":"22"},{"size":639,"mtime":1608750120119,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1a174i1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx",[],["94","95"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js",[],["96","97"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx",["98","99","100","101","102"],"import React, { useReducer } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n// import Link from '@material-ui/core/Link';\nimport Pokedex from './components/Pokedex';\nimport likedPokemons from './components/LikedPokemons';\n\n\nexport default function App(): JSX.Element {\n  return (\n    <Router>\n      <Grid direction=\"row\" alignItems=\"center\" justify=\"center\" spacing={5} container>\n        <Grid item>\n          <Link to=\"/\">\n            Pokedex\n      </Link>\n        </Grid>\n        <Grid item>\n          <Link to=\"/api/pokemons/liked\">\n            Liked\n      </Link>\n        </Grid>\n      </Grid>\n      <Switch>\n        <Route exact path=\"/\" component={Pokedex} />\n        <Route exact path=\"/api/pokemons/liked\" component={likedPokemons} />\n      </Switch>\n    </Router>\n  )\n};\n\n//style\ninterface StyleProps {\n  textField: BaseCSSProperties,\n  likeButton: BaseCSSProperties,\n  likeIcon: BaseCSSProperties,\n  info: BaseCSSProperties\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  textField: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 18,\n  },\n  likeIcon: {\n    color: \"#E4E4E4\",\n  },\n  likeButton: {\n    borderWidth: 2,\n    borderRadius: 90,\n    borderColor: \"#E4E4E4\"\n  },\n  info: {\n    paddingTop: 23,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx",["103","104"],"import React, { useState, useEffect } from \"react\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUpOutlined';\n\nimport axios from \"axios\";\n\n\nimport InfoPokemon from \"./InfoPokemon\";\n\nimport PokemonProps from '../../types/Pokemon';\nimport useFetchPokemons from \"../../hooks/useFetchPokemons\";\n\nconst UseLikePokemon = (id: string) => {\n  useEffect(() => {\n    const likePokemon = async () => {\n      try {\n        const changeLike = await axios.put(`/api/pokemons/${id}`);\n        console.log(\"changeLike\", changeLike)\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    likePokemon();\n  }, [id]);\n};\n\nexport default function CardPokemon({ id, name, img, type, like }: PokemonProps): JSX.Element {\n\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  const [isToggled, setToggled] = useState(like);\n\n  function toggleTrueFalse(id: string) {\n    console.log('isToggled', isToggled)\n    setToggled(!isToggled);\n    console.log('isToggled', isToggled)\n    const likePokemon = async () => {\n      try {\n\n        let data = {\n          \"like\": !isToggled\n        }\n        const result = await axios.put(`/api/pokemons/${id}`, data);\n        console.log(result)\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    likePokemon();\n  }\n  return (\n    <Box className={classes.container} boxShadow={3}>\n      <Box className={classes.info}>\n        <InfoPokemon id={id} name={name} img={img} type={type} />\n      </Box>\n      <Grid justify=\"flex-end\" container>\n        <Button onClick={() => toggleTrueFalse(id)} id={id} className={classes.likeButton}>\n          {\n            isToggled ? <ThumbUpIcon className={classes.likeIcon} /> : <ThumbUpOutlinedIcon className={classes.likeIcon} />\n          }\n        </Button>\n      </Grid>\n    </ Box>\n  );\n}\n\n//style\ninterface StyleProps {\n  container: BaseCSSProperties,\n  likeButton: BaseCSSProperties,\n  likeIcon: BaseCSSProperties,\n  info: BaseCSSProperties\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  container: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 18,\n    maxWidth: 350,\n    minWidth: 350,\n  },\n  likeIcon: {\n    color: \"#E4E4E4\",\n  },\n  likeButton: {\n    borderWidth: 2,\n    borderRadius: 90,\n    borderColor: \"#E4E4E4\"\n  },\n  info: {\n    paddingTop: 23,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx",["105"],"import { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Box } from \"@material-ui/core\";\n\ntype AvatarProps = { img: string };\n\nexport default function PokemonAvatar({ img }: AvatarProps): JSX.Element {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n\n  return (\n    <Box>\n      <img src={img} alt=\"me\" className={classes.avatar} />\n    </Box>\n  )\n}\n\n//style\ninterface StyleProps {\n  avatar: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  avatar: {\n    width: 126,\n    height: 117\n  },\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);",["106","107"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx",["108"],"import { useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokemonProps from \"../types/Pokemon\";\n\nconst useFetchPokemons = (dispatch: any) => {\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      dispatch({\n        type: \"START_LOADING\",\n        isLoading: true\n      })\n      try {\n        const result = await axios(\"/api/pokemons\");\n        dispatch({\n          type: \"POKEMONS_FETCH_SUCCESS\",\n          pokemons: result.data.result,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPokemons();\n  }, [dispatch]);\n};\n\nexport default useFetchPokemons;\n","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx",["109","110"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport CustomToUpperCase from \"../../hooks/CustomToUpperCase\";\nimport ParseColorType from \"../../hooks/ParseColorType\";\nimport SearchProps from \"../../types/Search\";\n\nconst type: string[] = ['None', 'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel']\n\nexport default function MenuTypeGenerator(searchType: any) {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box m={1}>\n      <Grid direction=\"row\" spacing={1} container>\n        {type\n          ? type.map((item: string) => {\n            return (\n              <Box key={item} className={classes.typeBox} bgcolor={ParseColorType(item)}>\n                {\n                  // item === 'None' ?\n                  //   <Grid key={item} item>\n                  //     <MenuItem value=\"\">\n                  //       <em>None</em>\n                  //     </MenuItem>\n                  //   </Grid> :\n                  <Grid key={item} item>\n                    <MenuItem alignItems=\"center\" key={item} value={item} className={classes.typeText} >{CustomToUpperCase(item)}</MenuItem>\n                  </Grid>}\n              </Box>\n            );\n          })\n          : null}\n      </Grid>\n    </Box>\n  );\n}\n\n//style\ninterface StyleProps {\n  typeBox: BaseCSSProperties,\n  typeText: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  typeText: {\n    color: \"#FFF\",\n    fontWeight: 900,\n    fontSize: 9,\n  },\n  typeBox: {\n    borderRadius: 9,\n    margin: 2,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);",["111","112"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/types.ts",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/Pokedex.tsx",["113","114"],"import React, { useReducer } from 'react';\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport appReducer from '../appReducer';\n\nimport SearchNav from './SearchNav/SearchNav';\nimport PokemonGenerator from './generators/PokemonGenerator';\n\nimport useFetchPokemons from '../hooks/useFetchPokemons';\n\nconst initialState = {\n  showAddForm: false,\n  successMessage: \"\",\n  isLoading: false,\n  pokemons: [],\n};\n\nexport default function Pokedex(): JSX.Element {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const [searchName, setSearchName] = React.useState(\"\");\n  const [searchType, setSearchType] = React.useState(\"\");\n  const [searchNumber, setSearchNumber] = React.useState(\"\");\n\n  const handleChange = (event: any) => {\n    setSearchName(event.target.value);\n  };\n\n  const handleChangeNumber = (event: any) => {\n    setSearchNumber(event.target.value);\n  };\n\n  const handleChangeType = (event: any) => {\n    setSearchType(event.target.value);\n  };\n\n  const { pokemons, isLoading } = state;\n  useFetchPokemons(dispatch);\n\n  function filterArray(array: [], filters: any) {\n    const filterKeys = Object.keys(filters);\n    return array.filter(item => {\n      return filterKeys.every(key => {\n        if (typeof filters[key] !== 'function') return true;\n        return filters[key](item[key]);\n      });\n    });\n  }\n\n  const filters = {\n    name: searchName ? (name: string) => name.toLowerCase().includes(searchName.toLocaleLowerCase()) : '',\n    id: searchNumber ? (id: string) => id.includes(searchNumber) : '',\n    type: searchType ? (type: string) => type.includes(searchType) : '',\n  }\n\n  const result = filterArray(pokemons, filters);\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box bgcolor='primary'>\n      <Grid direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={5} container>\n        <Grid item>\n          <SearchNav searchName={searchName} handleChange={handleChange} searchNumber={searchNumber} handleChangeNumber={handleChangeNumber} searchType={searchType} handleChangeType={handleChangeType} />\n        </Grid>\n        <Grid item>\n          {isLoading ? <CircularProgress /> : <PokemonGenerator {...result} />}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n};\n\n//style\ninterface StyleProps {\n  textField: BaseCSSProperties,\n  likeButton: BaseCSSProperties,\n  likeIcon: BaseCSSProperties,\n  info: BaseCSSProperties\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  textField: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 18,\n  },\n  likeIcon: {\n    color: \"#E4E4E4\",\n  },\n  likeButton: {\n    borderWidth: 2,\n    borderRadius: 90,\n    borderColor: \"#E4E4E4\"\n  },\n  info: {\n    paddingTop: 23,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/LikedPokemons.tsx",["115"],"import React, { useReducer } from 'react';\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport appReducer from '../appReducer';\nimport PokemonGenerator from './generators/PokemonGenerator';\n\nimport useFetchPokemonsLiked from '../hooks/useFetchPokemonsLiked';\n\nconst initialState = {\n  showAddForm: false,\n  successMessage: \"\",\n  likedPokemons: [],\n};\n\nexport default function LikedPokemons(): JSX.Element {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  useFetchPokemonsLiked(dispatch);\n  const { likedPokemons } = state;\n  console.log(\"likedPokemons\", likedPokemons)\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box bgcolor='primary'>\n      <Grid direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={5} container>\n        <Grid item>\n        </Grid>\n        <Grid item>\n          <PokemonGenerator {...likedPokemons} />\n        </Grid>\n      </Grid>\n    </Box>\n  )\n};\n\n//style\ninterface StyleProps {\n  textField: BaseCSSProperties,\n  likeButton: BaseCSSProperties,\n  likeIcon: BaseCSSProperties,\n  info: BaseCSSProperties\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  textField: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 18,\n  },\n  likeIcon: {\n    color: \"#E4E4E4\",\n  },\n  likeButton: {\n    borderWidth: 2,\n    borderRadius: 90,\n    borderColor: \"#E4E4E4\"\n  },\n  info: {\n    paddingTop: 23,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemonsLiked.tsx",["116"],"import { useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokemonProps from \"../types/Pokemon\";\n\nconst useFetchPokemonsLiked = (dispatch: any) => {\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const result = await axios(\"/api/pokemons/liked\");\n        console.log(\"result\", result.data.result)\n        dispatch({\n          type: \"POKEMONS_LIKED_FETCH_SUCCESS\",\n          likedPokemons: result.data.result,\n          isLoading: false\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPokemons();\n  }, [dispatch]);\n};\n\nexport default useFetchPokemonsLiked;\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":27},{"ruleId":"121","severity":1,"message":"125","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":11},{"ruleId":"121","severity":1,"message":"126","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":14},{"ruleId":"121","severity":1,"message":"127","line":49,"column":6,"nodeType":"123","messageId":"124","endLine":49,"endColumn":18},{"ruleId":"121","severity":1,"message":"128","line":69,"column":7,"nodeType":"123","messageId":"124","endLine":69,"endColumn":16},{"ruleId":"121","severity":1,"message":"129","line":16,"column":8,"nodeType":"123","messageId":"124","endLine":16,"endColumn":24},{"ruleId":"121","severity":1,"message":"130","line":18,"column":7,"nodeType":"123","messageId":"124","endLine":18,"endColumn":21},{"ruleId":"121","severity":1,"message":"131","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},{"ruleId":"121","severity":1,"message":"134","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"135","line":2,"column":21,"nodeType":"123","messageId":"124","endLine":2,"endColumn":31},{"ruleId":"121","severity":1,"message":"136","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":19},{"ruleId":"117","replacedBy":"137"},{"ruleId":"119","replacedBy":"138"},{"ruleId":"121","severity":1,"message":"126","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":61,"column":9,"nodeType":"123","messageId":"124","endLine":61,"endColumn":30},{"ruleId":"121","severity":1,"message":"139","line":23,"column":9,"nodeType":"123","messageId":"124","endLine":23,"endColumn":30},{"ruleId":"121","severity":1,"message":"134","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Button' is defined but never used.","'PropsClasses' is defined but never used.","'useStyles' is assigned a value but never used.","'useFetchPokemons' is defined but never used.","'UseLikePokemon' is assigned a value but never used.","'CardMedia' is defined but never used.",["140"],["141"],"'PokemonProps' is defined but never used.","'Typography' is defined but never used.","'SearchProps' is defined but never used.",["140"],["141"],"'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]