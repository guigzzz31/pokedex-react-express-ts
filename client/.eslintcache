[{"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx":"1","/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js":"2","/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx":"3","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx":"4","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx":"5","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx":"6","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts":"7","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx":"8","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx":"9","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx":"10","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx":"11","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx":"12","/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx":"13","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx":"14","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx":"15","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx":"16"},{"size":500,"mtime":1608564074953,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608550236169,"results":"19","hashOfConfig":"18"},{"size":4167,"mtime":1608730240367,"results":"20","hashOfConfig":"18"},{"size":1575,"mtime":1608715926392,"results":"21","hashOfConfig":"18"},{"size":1366,"mtime":1608727981169,"results":"22","hashOfConfig":"18"},{"size":86,"mtime":1608645437993,"results":"23","hashOfConfig":"18"},{"size":1440,"mtime":1608727424729,"results":"24","hashOfConfig":"18"},{"size":839,"mtime":1608645437993,"results":"25","hashOfConfig":"18"},{"size":842,"mtime":1608645437993,"results":"26","hashOfConfig":"18"},{"size":773,"mtime":1608655874088,"results":"27","hashOfConfig":"18"},{"size":1226,"mtime":1608645437993,"results":"28","hashOfConfig":"18"},{"size":1202,"mtime":1608720704260,"results":"29","hashOfConfig":"18"},{"size":486,"mtime":1608674374209,"results":"30","hashOfConfig":"18"},{"size":1029,"mtime":1608674374213,"results":"31","hashOfConfig":"18"},{"size":3682,"mtime":1608730269520,"results":"32","hashOfConfig":"18"},{"size":1949,"mtime":1608724141751,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1a174i1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx",[],["73","74"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js",[],["75","76"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx",["77","78","79","80","81","82","83"],"import React, { useReducer, useState, useEffect } from 'react';\nimport { Box, Button, Grid, Input } from '@material-ui/core';\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\n\n// import CircularProgress from '@material-ui/core/CircularProgress';\nimport PokemonGenerator from './components/generators/PokemonGenerator';\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\n\nimport appReducer from './appReducer';\nimport useFetchPokemons from './hooks/useFetchPokemons';\nimport PokemonProps from './types/Pokemon';\nimport { TextField } from '@material-ui/core';\nimport SearchNav from './components/SearchNav/SearchNav';\n\nconst initialState = {\n  showAddForm: false,\n  successMessage: \"\",\n  isLoading: false,\n  pokemons: [],\n};\n\n\nexport default function App(): JSX.Element {\n\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const [searchName, setSearchName] = React.useState(\"\");\n  const [searchType, setSearchType] = React.useState(\"\");\n  const [searchNumber, setSearchNumber] = React.useState(\"\");\n\n  const handleChange = (event: any) => {\n    setSearchName(event.target.value);\n  };\n\n  const handleChangeNumber = (event: any) => {\n    setSearchNumber(event.target.value);\n  };\n\n  const handleChangeType = (event: any) => {\n    setSearchType(event.target.value);\n  };\n\n  // const handleChangeType = (event: any, options: any) => {\n  //   // const { options } = event.target.value;\n  //   console.log(\"options\", options.selected)\n  //   const value: string[] | any = [];\n  //   for (let i = 0, l = options.length; i < l; i += 1) {\n  //     if (options[i].selected) {\n  //       value.push(options[i].value);\n  //     }\n  //   }\n  //   console.log(\"value\", value)\n  //   setSearchType(value);\n  // };\n\n  const { pokemons, isLoading } = state;\n  useFetchPokemons(dispatch);\n\n  const results = !searchName && !searchNumber\n    ? pokemons\n    : pokemons\n      .filter((pokemon: PokemonProps) =>\n        pokemon.name.toLowerCase().includes(searchName.toLocaleLowerCase())\n      )\n      .filter((pokemon: PokemonProps) =>\n        pokemon.id.toLowerCase().includes(searchNumber.toLocaleLowerCase())\n      )\n      .filter((pokemon: PokemonProps) =>\n        pokemon.type.includes(searchType)\n      );\n\n  function filterArray(array: [], filters: any) {\n    const filterKeys = Object.keys(filters);\n    return array.filter(item => {\n      return filterKeys.every(key => {\n        if (typeof filters[key] !== 'function') return true;\n        return filters[key](item[key]);\n      });\n    });\n  }\n\n  const filters = {\n    name: searchName ? (name: string) => name.toLowerCase().includes(searchName.toLocaleLowerCase()) : '',\n    id: searchNumber ? (id: string) => id.includes(searchNumber) : '',\n    type: searchType ? (type: string) => type.includes(searchType) : '',\n  }\n\n  const resultv1 = filterArray(pokemons, filters);\n\n  console.log(\"filert\", filters)\n\n\n  const classes: PropsClasses = useStyles({} as StyleProps);\n\n  return (\n    <Box bgcolor='primary'>\n      <Grid direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={5} container>\n        <Grid item>\n          <Button>\n            POKEDEX\n          </Button>\n          <Button>\n            LIKED\n          </Button>\n        </Grid>\n        <Grid item>\n          <SearchNav searchName={searchName} handleChange={handleChange} searchNumber={searchNumber} handleChangeNumber={handleChangeNumber} searchType={searchType} handleChangeType={handleChangeType} />\n        </Grid>\n        <Grid item>\n          <PokemonGenerator {...resultv1} />\n        </Grid>\n      </Grid>\n    </Box>\n  )\n};\n\n//style\ninterface StyleProps {\n  textField: BaseCSSProperties,\n  likeButton: BaseCSSProperties,\n  likeIcon: BaseCSSProperties,\n  info: BaseCSSProperties\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  textField: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 18,\n  },\n  likeIcon: {\n    color: \"#E4E4E4\",\n  },\n  likeButton: {\n    borderWidth: 2,\n    borderRadius: 90,\n    borderColor: \"#E4E4E4\"\n  },\n  info: {\n    paddingTop: 23,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx",["84"],"import { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Box } from \"@material-ui/core\";\n\ntype AvatarProps = { img: string };\n\nexport default function PokemonAvatar({ img }: AvatarProps): JSX.Element {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n\n  return (\n    <Box>\n      <img src={img} alt=\"me\" className={classes.avatar} />\n    </Box>\n  )\n}\n\n//style\ninterface StyleProps {\n  avatar: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  avatar: {\n    width: 126,\n    height: 117\n  },\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx",["85"],"import { useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokemonProps from \"../types/Pokemon\";\n\nconst useFetchPokemons = (dispatch: any) => {\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      // dispatch({\n      //   type: \"START_LOADING\",\n      //   isLoading: true\n      // })\n      try {\n        const result = await axios(\"/api/pokemons\");\n        // let pokemons = result.data.result.map((pokemon: any) => {\n        //   return {\n        //     id: pokemon.id,\n        //     _id: pokemon._id,\n        //     name: pokemon.name,\n        //     img: pokemon.img,\n        //     damages: pokemon.damages,\n        //     misc: pokemon.misc,\n        //     stats: pokemon.stats,\n        //     type: pokemon.type,\n        //   }\n        // })\n        dispatch({\n          type: \"POKEMONS_FETCH_SUCCESS\",\n          pokemons: result.data.result,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchPokemons();\n  }, [dispatch]);\n};\n\nexport default useFetchPokemons;\n","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx",["86"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx",["87","88"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport CustomToUpperCase from \"../../hooks/CustomToUpperCase\";\nimport ParseColorType from \"../../hooks/ParseColorType\";\nimport SearchProps from \"../../types/Search\";\n\nconst type: string[] = ['None', 'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel']\n\nexport default function MenuTypeGenerator(searchType: any) {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box m={1}>\n      <Grid direction=\"row\" spacing={1} container>\n        {type\n          ? type.map((item: string) => {\n            return (\n              <Box key={item} className={classes.typeBox} bgcolor={ParseColorType(item)}>\n                {\n                  // item === 'None' ?\n                  //   <Grid key={item} item>\n                  //     <MenuItem value=\"\">\n                  //       <em>None</em>\n                  //     </MenuItem>\n                  //   </Grid> :\n                  <Grid key={item} item>\n                    <MenuItem alignItems=\"center\" key={item} value={item} className={classes.typeText} >{CustomToUpperCase(item)}</MenuItem>\n                  </Grid>}\n              </Box>\n            );\n          })\n          : null}\n      </Grid>\n    </Box>\n  );\n}\n\n//style\ninterface StyleProps {\n  typeBox: BaseCSSProperties,\n  typeText: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  typeText: {\n    color: \"#FFF\",\n    fontWeight: 900,\n    fontSize: 9,\n  },\n  typeBox: {\n    borderRadius: 9,\n    margin: 2,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);",["89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":37},{"ruleId":"95","severity":1,"message":"99","line":1,"column":39,"nodeType":"97","messageId":"98","endLine":1,"endColumn":48},{"ruleId":"95","severity":1,"message":"100","line":2,"column":29,"nodeType":"97","messageId":"98","endLine":2,"endColumn":34},{"ruleId":"95","severity":1,"message":"101","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":19},{"ruleId":"95","severity":1,"message":"102","line":55,"column":21,"nodeType":"97","messageId":"98","endLine":55,"endColumn":30},{"ruleId":"95","severity":1,"message":"103","line":58,"column":9,"nodeType":"97","messageId":"98","endLine":58,"endColumn":16},{"ruleId":"95","severity":1,"message":"104","line":92,"column":9,"nodeType":"97","messageId":"98","endLine":92,"endColumn":30},{"ruleId":"95","severity":1,"message":"105","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"106","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"107","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":22},{"ruleId":"95","severity":1,"message":"108","line":2,"column":21,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"95","severity":1,"message":"109","line":10,"column":8,"nodeType":"97","messageId":"98","endLine":10,"endColumn":19},{"ruleId":"91","replacedBy":"110"},{"ruleId":"93","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Input' is defined but never used.","'TextField' is defined but never used.","'isLoading' is assigned a value but never used.","'results' is assigned a value but never used.","'classes' is assigned a value but never used.","'CardMedia' is defined but never used.","'PokemonProps' is defined but never used.","'FormHelperText' is defined but never used.","'Typography' is defined but never used.","'SearchProps' is defined but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]