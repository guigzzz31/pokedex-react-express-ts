[{"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx":"1","/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js":"2","/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx":"3","/home/wcs-guigzzzzz/Documents/pokedex/client/src/data.js":"4","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx":"5","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx":"6","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx":"7","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts":"8"},{"size":500,"mtime":1608564074953,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608550236169,"results":"11","hashOfConfig":"10"},{"size":328,"mtime":1608585706002,"results":"12","hashOfConfig":"10"},{"size":6677,"mtime":1608585706002,"results":"13","hashOfConfig":"10"},{"size":2082,"mtime":1608633479613,"results":"14","hashOfConfig":"10"},{"size":1356,"mtime":1608636509973,"results":"15","hashOfConfig":"10"},{"size":86,"mtime":1608633224627,"results":"16","hashOfConfig":"10"},{"size":1345,"mtime":1608636484698,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1a174i1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx",[],["38","39"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js",[],["40","41"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/data.js",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx",["42"],"import { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// import AvatarGenerator from \"../../generators/AvatarGenerator\";\nimport TypeGenerator from \"../generators/TypeGenerator\";\n// import CardName from \"./CardName\";\nimport PokemonProps from \"../../types/Pokemon\";\n\nimport CustomToUpperCase from \"../../hooks/CustomToUpperCase\";\n\ninterface StyleProps {\n  container: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  container: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 10,\n  },\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);\n\n// const useStyles = createStyles(({ palette }: Theme) => ({\n//   container: {\n//     backgroundColor: palette.primary.main,\n//     borderWidth: 1,\n//     borderRadius: 10,\n//   },\n// }));\n\n\nexport default function CardPokemon({ id, name, img, type }: PokemonProps): JSX.Element {\n  // const classes = useStyles();\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  console.log('img', img)\n  return (\n    <Box className={classes.container} boxShadow={3} m={2}>\n      <Grid\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"row\"\n        spacing={1}\n        container\n      >\n        <Grid item>\n          <Box>\n            <img alt={name} src={img} />\n          </Box>\n        </Grid>\n        <Grid item>\n          <Box p={1}>\n            {/* <CardName title={name} /> */}\n            <Grid spacing={1} container>\n              <Grid item>\n                <Typography variant=\"h5\">{id}</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h5\">{CustomToUpperCase(name)}</Typography>\n              </Grid>\n            </Grid>\n            <TypeGenerator type={type} />\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx",["43"],"import { Box, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\n\nimport CustomToUpperCase from \"../../hooks/CustomToUpperCase\";\nimport ParseColorType from \"../../hooks/ParseColorType\";\n\ntype TypeProps = { type: string[] };\ninterface StyleProps {\n  typeBox: BaseCSSProperties,\n  typeText: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  typeText: {\n    color: \"#FFF\",\n    fontWeight: 900,\n    fontSize: 12,\n  },\n  typeBox: {\n    borderRadius: 9,\n    width: 77,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);\n\n\nexport default function SkillGenerator({ type }: TypeProps) {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n\n\n\n  return (\n    <Grid direction=\"column\" spacing={1} container>\n      {type\n        ? type.map((item: string) => {\n          return (\n            <Grid item>\n              <Box className={classes.typeBox} bgcolor={ParseColorType(item)}>\n                <Typography align=\"center\" className={classes.typeText} key={item}>{CustomToUpperCase(item)}</Typography>\n              </Box>\n            </Grid>\n          );\n        })\n        : null}\n    </Grid>\n  );\n}\n","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":29},{"ruleId":"48","severity":1,"message":"49","line":3,"column":17,"nodeType":"50","messageId":"51","endLine":3,"endColumn":29},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]