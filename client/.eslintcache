[{"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx":"1","/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js":"2","/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx":"3","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx":"4","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx":"5","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx":"6","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts":"7","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx":"8","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx":"9","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx":"10","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx":"11","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx":"12","/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx":"13","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx":"14","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx":"15","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx":"16","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/types.ts":"17"},{"size":500,"mtime":1608564074953,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608550236169,"results":"20","hashOfConfig":"19"},{"size":3231,"mtime":1608744582220,"results":"21","hashOfConfig":"19"},{"size":2725,"mtime":1608745655888,"results":"22","hashOfConfig":"19"},{"size":1366,"mtime":1608727981169,"results":"23","hashOfConfig":"19"},{"size":86,"mtime":1608645437993,"results":"24","hashOfConfig":"19"},{"size":1440,"mtime":1608730589624,"results":"25","hashOfConfig":"19"},{"size":839,"mtime":1608645437993,"results":"26","hashOfConfig":"19"},{"size":842,"mtime":1608645437993,"results":"27","hashOfConfig":"19"},{"size":773,"mtime":1608655874088,"results":"28","hashOfConfig":"19"},{"size":1226,"mtime":1608645437993,"results":"29","hashOfConfig":"19"},{"size":1207,"mtime":1608740916965,"results":"30","hashOfConfig":"19"},{"size":486,"mtime":1608674374209,"results":"31","hashOfConfig":"19"},{"size":629,"mtime":1608745825139,"results":"32","hashOfConfig":"19"},{"size":3425,"mtime":1608740886217,"results":"33","hashOfConfig":"19"},{"size":1949,"mtime":1608724141751,"results":"34","hashOfConfig":"19"},{"size":192,"mtime":1608740560943,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1a174i1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx",[],["76","77"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js",[],["78","79"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx",["80","81"],"import React, { useReducer } from 'react';\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n// import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport appReducer from './appReducer';\n\nimport SearchNav from './components/SearchNav/SearchNav';\nimport PokemonGenerator from './components/generators/PokemonGenerator';\n\nimport useFetchPokemons from './hooks/useFetchPokemons';\n\nconst initialState = {\n  showAddForm: false,\n  successMessage: \"\",\n  isLoading: false,\n  pokemons: [],\n};\n\nexport default function App(): JSX.Element {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const [searchName, setSearchName] = React.useState(\"\");\n  const [searchType, setSearchType] = React.useState(\"\");\n  const [searchNumber, setSearchNumber] = React.useState(\"\");\n\n  const handleChange = (event: any) => {\n    setSearchName(event.target.value);\n  };\n\n  const handleChangeNumber = (event: any) => {\n    setSearchNumber(event.target.value);\n  };\n\n  const handleChangeType = (event: any) => {\n    setSearchType(event.target.value);\n  };\n\n  const { pokemons, isLoading } = state;\n  useFetchPokemons(dispatch);\n\n  function filterArray(array: [], filters: any) {\n    const filterKeys = Object.keys(filters);\n    return array.filter(item => {\n      return filterKeys.every(key => {\n        if (typeof filters[key] !== 'function') return true;\n        return filters[key](item[key]);\n      });\n    });\n  }\n\n  const filters = {\n    name: searchName ? (name: string) => name.toLowerCase().includes(searchName.toLocaleLowerCase()) : '',\n    id: searchNumber ? (id: string) => id.includes(searchNumber) : '',\n    type: searchType ? (type: string) => type.includes(searchType) : '',\n  }\n\n  const result = filterArray(pokemons, filters);\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box bgcolor='primary'>\n      <Grid direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={5} container>\n        <Grid item>\n          <Button>\n            POKEDEX\n          </Button>\n          <Button>\n            LIKED\n          </Button>\n        </Grid>\n        <Grid item>\n          <SearchNav searchName={searchName} handleChange={handleChange} searchNumber={searchNumber} handleChangeNumber={handleChangeNumber} searchType={searchType} handleChangeType={handleChangeType} />\n        </Grid>\n        <Grid item>\n          <PokemonGenerator {...result} />\n        </Grid>\n      </Grid>\n    </Box>\n  )\n};\n\n//style\ninterface StyleProps {\n  textField: BaseCSSProperties,\n  likeButton: BaseCSSProperties,\n  likeIcon: BaseCSSProperties,\n  info: BaseCSSProperties\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  textField: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderRadius: 18,\n  },\n  likeIcon: {\n    color: \"#E4E4E4\",\n  },\n  likeButton: {\n    borderWidth: 2,\n    borderRadius: 90,\n    borderColor: \"#E4E4E4\"\n  },\n  info: {\n    paddingTop: 23,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx",["82","83"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx",["84"],"import { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Box } from \"@material-ui/core\";\n\ntype AvatarProps = { img: string };\n\nexport default function PokemonAvatar({ img }: AvatarProps): JSX.Element {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n\n  return (\n    <Box>\n      <img src={img} alt=\"me\" className={classes.avatar} />\n    </Box>\n  )\n}\n\n//style\ninterface StyleProps {\n  avatar: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  avatar: {\n    width: 126,\n    height: 117\n  },\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx",["85"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx",["86","87"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport CustomToUpperCase from \"../../hooks/CustomToUpperCase\";\nimport ParseColorType from \"../../hooks/ParseColorType\";\nimport SearchProps from \"../../types/Search\";\n\nconst type: string[] = ['None', 'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel']\n\nexport default function MenuTypeGenerator(searchType: any) {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box m={1}>\n      <Grid direction=\"row\" spacing={1} container>\n        {type\n          ? type.map((item: string) => {\n            return (\n              <Box key={item} className={classes.typeBox} bgcolor={ParseColorType(item)}>\n                {\n                  // item === 'None' ?\n                  //   <Grid key={item} item>\n                  //     <MenuItem value=\"\">\n                  //       <em>None</em>\n                  //     </MenuItem>\n                  //   </Grid> :\n                  <Grid key={item} item>\n                    <MenuItem alignItems=\"center\" key={item} value={item} className={classes.typeText} >{CustomToUpperCase(item)}</MenuItem>\n                  </Grid>}\n              </Box>\n            );\n          })\n          : null}\n      </Grid>\n    </Box>\n  );\n}\n\n//style\ninterface StyleProps {\n  typeBox: BaseCSSProperties,\n  typeText: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  typeText: {\n    color: \"#FFF\",\n    fontWeight: 900,\n    fontSize: 9,\n  },\n  typeBox: {\n    borderRadius: 9,\n    margin: 2,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);",["88","89"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/types.ts",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":41,"column":21,"nodeType":"96","messageId":"97","endLine":41,"endColumn":30},{"ruleId":"94","severity":1,"message":"98","line":61,"column":9,"nodeType":"96","messageId":"97","endLine":61,"endColumn":30},{"ruleId":"94","severity":1,"message":"99","line":16,"column":8,"nodeType":"96","messageId":"97","endLine":16,"endColumn":24},{"ruleId":"94","severity":1,"message":"100","line":18,"column":7,"nodeType":"96","messageId":"97","endLine":18,"endColumn":21},{"ruleId":"94","severity":1,"message":"101","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"102","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"103","line":2,"column":21,"nodeType":"96","messageId":"97","endLine":2,"endColumn":31},{"ruleId":"94","severity":1,"message":"104","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":19},{"ruleId":"90","replacedBy":"105"},{"ruleId":"92","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'useFetchPokemons' is defined but never used.","'UseLikePokemon' is assigned a value but never used.","'CardMedia' is defined but never used.","'PokemonProps' is defined but never used.","'Typography' is defined but never used.","'SearchProps' is defined but never used.",["107"],["108"],"no-global-assign","no-unsafe-negation"]