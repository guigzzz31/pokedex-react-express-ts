[{"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx":"1","/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js":"2","/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx":"3","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx":"4","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx":"5","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx":"6","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts":"7","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx":"8","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx":"9","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx":"10","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx":"11","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx":"12","/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx":"13","/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx":"14","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx":"15","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx":"16"},{"size":500,"mtime":1608564074953,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608550236169,"results":"19","hashOfConfig":"18"},{"size":3748,"mtime":1608730589624,"results":"20","hashOfConfig":"18"},{"size":1575,"mtime":1608730589624,"results":"21","hashOfConfig":"18"},{"size":1366,"mtime":1608727981169,"results":"22","hashOfConfig":"18"},{"size":86,"mtime":1608645437993,"results":"23","hashOfConfig":"18"},{"size":1440,"mtime":1608730589624,"results":"24","hashOfConfig":"18"},{"size":839,"mtime":1608645437993,"results":"25","hashOfConfig":"18"},{"size":842,"mtime":1608645437993,"results":"26","hashOfConfig":"18"},{"size":773,"mtime":1608655874088,"results":"27","hashOfConfig":"18"},{"size":1226,"mtime":1608645437993,"results":"28","hashOfConfig":"18"},{"size":1202,"mtime":1608730589624,"results":"29","hashOfConfig":"18"},{"size":486,"mtime":1608674374209,"results":"30","hashOfConfig":"18"},{"size":1029,"mtime":1608674374213,"results":"31","hashOfConfig":"18"},{"size":3682,"mtime":1608730589624,"results":"32","hashOfConfig":"18"},{"size":1949,"mtime":1608724141751,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1a174i1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"/home/wcs-guigzzzzz/Documents/pokedex/client/src/index.tsx",[],["73","74"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/reportWebVitals.js",[],["75","76"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/App.tsx",["77","78","79","80","81","82","83"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/CardPokemon.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/TypeGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/CustomToUpperCase.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/ParseColorType.ts",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonName.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonNumber.tsx",[],["84","85"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/helpers/PokemonAvatar.tsx",["86"],"import { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Box } from \"@material-ui/core\";\n\ntype AvatarProps = { img: string };\n\nexport default function PokemonAvatar({ img }: AvatarProps): JSX.Element {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n\n  return (\n    <Box>\n      <img src={img} alt=\"me\" className={classes.avatar} />\n    </Box>\n  )\n}\n\n//style\ninterface StyleProps {\n  avatar: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  avatar: {\n    width: 126,\n    height: 117\n  },\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/CardPokemon/InfoPokemon.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/PokemonGenerator.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/appReducer.tsx",[],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/hooks/useFetchPokemons.tsx",["87"],"import { useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokemonProps from \"../types/Pokemon\";\n\nconst useFetchPokemons = (dispatch: any) => {\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      // dispatch({\n      //   type: \"START_LOADING\",\n      //   isLoading: true\n      // })\n      try {\n        const result = await axios(\"/api/pokemons\");\n        // let pokemons = result.data.result.map((pokemon: any) => {\n        //   return {\n        //     id: pokemon.id,\n        //     _id: pokemon._id,\n        //     name: pokemon.name,\n        //     img: pokemon.img,\n        //     damages: pokemon.damages,\n        //     misc: pokemon.misc,\n        //     stats: pokemon.stats,\n        //     type: pokemon.type,\n        //   }\n        // })\n        dispatch({\n          type: \"POKEMONS_FETCH_SUCCESS\",\n          pokemons: result.data.result,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchPokemons();\n  }, [dispatch]);\n};\n\nexport default useFetchPokemons;\n","/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/SearchNav/SearchNav.tsx",["88"],"/home/wcs-guigzzzzz/Documents/pokedex/client/src/components/generators/MenuTypeGenerator.tsx",["89","90"],"import React from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { BaseCSSProperties } from '@material-ui/core/styles/withStyles';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport CustomToUpperCase from \"../../hooks/CustomToUpperCase\";\nimport ParseColorType from \"../../hooks/ParseColorType\";\nimport SearchProps from \"../../types/Search\";\n\nconst type: string[] = ['None', 'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel']\n\nexport default function MenuTypeGenerator(searchType: any) {\n  const classes: PropsClasses = useStyles({} as StyleProps);\n  return (\n    <Box m={1}>\n      <Grid direction=\"row\" spacing={1} container>\n        {type\n          ? type.map((item: string) => {\n            return (\n              <Box key={item} className={classes.typeBox} bgcolor={ParseColorType(item)}>\n                {\n                  // item === 'None' ?\n                  //   <Grid key={item} item>\n                  //     <MenuItem value=\"\">\n                  //       <em>None</em>\n                  //     </MenuItem>\n                  //   </Grid> :\n                  <Grid key={item} item>\n                    <MenuItem alignItems=\"center\" key={item} value={item} className={classes.typeText} >{CustomToUpperCase(item)}</MenuItem>\n                  </Grid>}\n              </Box>\n            );\n          })\n          : null}\n      </Grid>\n    </Box>\n  );\n}\n\n//style\ninterface StyleProps {\n  typeBox: BaseCSSProperties,\n  typeText: BaseCSSProperties,\n}\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nlet baseStyle: StyleProps = {\n  typeText: {\n    color: \"#FFF\",\n    fontWeight: 900,\n    fontSize: 9,\n  },\n  typeBox: {\n    borderRadius: 9,\n    margin: 2,\n  }\n}\nconst useStyles = makeStyles<Theme, StyleProps>(() => baseStyle as any);",["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":29,"nodeType":"99","messageId":"100","endLine":1,"endColumn":37},{"ruleId":"97","severity":1,"message":"101","line":1,"column":39,"nodeType":"99","messageId":"100","endLine":1,"endColumn":48},{"ruleId":"97","severity":1,"message":"102","line":2,"column":29,"nodeType":"99","messageId":"100","endLine":2,"endColumn":34},{"ruleId":"97","severity":1,"message":"103","line":11,"column":8,"nodeType":"99","messageId":"100","endLine":11,"endColumn":20},{"ruleId":"97","severity":1,"message":"104","line":12,"column":10,"nodeType":"99","messageId":"100","endLine":12,"endColumn":19},{"ruleId":"97","severity":1,"message":"105","line":55,"column":21,"nodeType":"99","messageId":"100","endLine":55,"endColumn":30},{"ruleId":"97","severity":1,"message":"106","line":80,"column":9,"nodeType":"99","messageId":"100","endLine":80,"endColumn":30},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","replacedBy":"108"},{"ruleId":"97","severity":1,"message":"109","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},{"ruleId":"97","severity":1,"message":"103","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":20},{"ruleId":"97","severity":1,"message":"110","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":22},{"ruleId":"97","severity":1,"message":"111","line":2,"column":21,"nodeType":"99","messageId":"100","endLine":2,"endColumn":31},{"ruleId":"97","severity":1,"message":"112","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":19},{"ruleId":"93","replacedBy":"113"},{"ruleId":"95","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Input' is defined but never used.","'PokemonProps' is defined but never used.","'TextField' is defined but never used.","'isLoading' is assigned a value but never used.","'classes' is assigned a value but never used.",["115"],["116"],"'CardMedia' is defined but never used.","'FormHelperText' is defined but never used.","'Typography' is defined but never used.","'SearchProps' is defined but never used.",["115"],["116"],"no-global-assign","no-unsafe-negation"]